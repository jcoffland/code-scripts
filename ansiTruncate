#!/usr/bin/env python3

import sys
import argparse


def at(s, i): return s[i:i + 1]


def ansi_match(s, i):
  if at(s, i) == '\033' and at(s, i + 1) == '[':
    i += 2

    while True:
      while '0' <= at(s, i) and at(s, i) <= '9': i += 1
      if at(s, i) != ';': break
      i += 1

    if at(s, i) != '': return i + 1

  return 0


def ansi_trunc(s, width):
  i = 0
  ansi = False

  while width:
    offset = ansi_match(s, i)

    if offset:
      i = offset
      ansi = True

    else:
      width -= 1
      i += 1

  return s[:i] + ('\033[0m' if ansi else '')


# Parse args
description = 'Truncate lines accounting for ANSI codes'
parser = argparse.ArgumentParser(description = description)
parser.add_argument('-w', '--width', type = int, default = 80,
                    help = 'Line width')
args = parser.parse_args()

for line in sys.stdin:
  print(ansi_trunc(line[:-1], args.width))
